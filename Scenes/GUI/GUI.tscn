[gd_scene load_steps=39 format=2]

[ext_resource path="res://Assets/Shaders/shader_heartbeat.tres" type="Material" id=1]
[ext_resource path="res://Assets/Sprites/GUI/Inventory/spr_inv_grid.png" type="Texture" id=2]
[ext_resource path="res://Assets/Sprites/GUI/Inventory/gui_inv_chip.png" type="Texture" id=3]
[ext_resource path="res://Assets/Sprites/GUI/Inventory/spr_inv_main.png" type="Texture" id=4]
[ext_resource path="res://Assets/Sprites/GUI/Inventory/spr_inv_grid_preview.png" type="Texture" id=5]
[ext_resource path="res://Assets/Sprites/GUI/Inventory/spr_inv_wuse.png" type="Texture" id=6]
[ext_resource path="res://Assets/Sprites/GUI/Inventory/spr_grid_9patch.png" type="Texture" id=7]
[ext_resource path="res://Assets/Fonts/6pxFont.tres" type="DynamicFont" id=8]
[ext_resource path="res://Assets/Sprites/Player/sheet_pl_movement_10x10.png" type="Texture" id=9]
[ext_resource path="res://Assets/Models/defaultModelMaterial.tres" type="Material" id=10]
[ext_resource path="res://Scripts/Inventory/CSGPolygon.gd" type="Script" id=11]
[ext_resource path="res://Assets/GUI/buttonstyle.tres" type="StyleBox" id=12]
[ext_resource path="res://Scripts/GUI/GUIStatus.cs" type="Script" id=13]
[ext_resource path="res://Scripts/GUI/GUI.cs" type="Script" id=15]
[ext_resource path="res://Assets/Sprites/GUI/Inventory/spr_inv_wnoconnect.png" type="Texture" id=16]
[ext_resource path="res://Assets/Shaders/shader_tv_noise.tres" type="Material" id=17]
[ext_resource path="res://Scripts/Inventory/Inventory.cs" type="Script" id=18]
[ext_resource path="res://Assets/Sprites/GUI/Inventory/spr_inv_wtool.png" type="Texture" id=19]
[ext_resource path="res://Scripts/Inventory/InventoryManager.cs" type="Script" id=20]
[ext_resource path="res://Scripts/GUI/GUIPreview.cs" type="Script" id=21]
[ext_resource path="res://Assets/Sprites/GUI/Inventory/spr_inv_weapon.png" type="Texture" id=22]
[ext_resource path="res://Assets/Fonts/6px-Normal.ttf" type="DynamicFontData" id=23]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform float breathRate: hint_range(1., 3.);
uniform vec2 iResolution;
uniform vec4 blend_color: hint_color;
uniform sampler2D gradient;
uniform float offset = 0;


float sinc(float x) {
    return (x == 0.0) ? 1.0 : sin(x) / x;
}

float triIsolate(float x) {
    return abs(-1.0 + fract(clamp(x, -0.5, 0.5)) * 2.0);
}

// Probably not a healthy heart
float heartbeat(float x) {
    float prebeat = -sinc((x - 0.4) * 40.0) * 0.6 * triIsolate((x - 0.4) * 1.0);
    float mainbeat = (sinc((x - 0.5) * 60.0)) * 1.2 * triIsolate((x - 0.5) * 0.7);
    float postbeat = sinc((x - 0.85) * 15.0) * 0.5 * triIsolate((x - 0.85) * 0.6);
    return (prebeat + mainbeat + postbeat) * triIsolate((x - 0.625) * 0.8); // width 1.25
}

float distanceToLineSegment(vec2 p0, vec2 p1, vec2 p) {
    float distanceP0 = length(p0 - p);
    float distanceP1 = length(p1 - p);
    
    float l2 =pow(length(p0 - p1), 2.);
    float t = max(0., min(1., dot(p - p0, p1 - p0) / l2));
    vec2 projection = p0 + t * (p1 - p0); 
    float distanceToProjection = length(projection - p);
    
    return min(min(distanceP0, distanceP1), distanceToProjection);
}

float saw(float x, float period) {
	return x - ceil(x / period - 0.5) * period;
}

float function(float x) {
//	x += 0.1;
//	x *= 1.9;
//	 if (x > 1.25) x -= 1.25;
//	return 0.5 - heartbeat(x) / 2.;
	return 0.5 - sin(x * 9. * breathRate) / 2.5;
}

float distanceToFunction(vec2 p, float xDelta) {
    float result = 100.;
    for (float i = -3.; i < 3.; i += 1.)
    {
        vec2 q = p;
        q.x += xDelta * i;
        
        vec2 p0 = vec2(q.x, function(q.x));
    	vec2 p1 = vec2(q.x + xDelta, function(q.x + xDelta));
        result = min(result, distanceToLineSegment(p0, p1, p));
    }

    return result;
}

float getFunctionLine(vec2 uv) {
	float distanceToPlot = distanceToFunction(uv, 1. / iResolution.x);
    float intensity = smoothstep(0., 1., 1. - distanceToPlot * 1. * iResolution.y);
    intensity = pow(intensity,1./2.2);
	return intensity;
}

float cot(float x) {
	return cos(x) / sin(x);
}

float sawtooth(float x, float amplitude, float period) {
	float a1 = (2. * amplitude) / 3.1416;
	float a2 = (x * 3.1416) / period;
	return -a1 * atan(cot(a2));
}

void fragment() {
    vec2 uv = UV;

    float intensity = getFunctionLine(uv);
	intensity = min(intensity * 1.5, 1.);
    vec3 col = vec3(blend_color.rgb) * intensity;
	
	float grad = texture(gradient, vec2(UV.x - sawtooth(TIME + offset, 1., 2.), UV.y)).r;
	
    COLOR = vec4(col,1.0);
	COLOR.a = intensity * grad;
}"

[sub_resource type="Gradient" id=2]
offsets = PoolRealArray( 0.105634, 0.464789, 0.669014, 0.711268 )
colors = PoolColorArray( 0, 0, 0, 1, 0.263158, 0.263158, 0.263158, 1, 1, 1, 1, 1, 0, 0, 0, 1 )

[sub_resource type="GradientTexture" id=3]
gradient = SubResource( 2 )

[sub_resource type="ShaderMaterial" id=4]
shader = SubResource( 1 )
shader_param/breathRate = 1.0
shader_param/iResolution = Vector2( 10, 30 )
shader_param/blend_color = Color( 0.0823529, 0.254902, 0.937255, 1 )
shader_param/offset = 0.75
shader_param/gradient = SubResource( 3 )

[sub_resource type="Shader" id=5]
code = "shader_type canvas_item;

uniform float chiRate: hint_range(0.25, 2.5);
uniform vec2 iResolution;
uniform vec4 blend_color: hint_color;
uniform sampler2D gradient;
uniform float offset = 0;
uniform sampler2D noise;


float sinc(float x) {
    return (x == 0.0) ? 1.0 : sin(x) / x;
}

float triIsolate(float x) {
    return abs(-1.0 + fract(clamp(x, -0.5, 0.5)) * 2.0);
}

// Probably not a healthy heart
float heartbeat(float x) {
    float prebeat = -sinc((x - 0.4) * 40.0) * 0.6 * triIsolate((x - 0.4) * 1.0);
    float mainbeat = (sinc((x - 0.5) * 60.0)) * 1.2 * triIsolate((x - 0.5) * 0.7);
    float postbeat = sinc((x - 0.85) * 15.0) * 0.5 * triIsolate((x - 0.85) * 0.6);
    return (prebeat + mainbeat + postbeat) * triIsolate((x - 0.625) * 0.8); // width 1.25
}

float distanceToLineSegment(vec2 p0, vec2 p1, vec2 p) {
    float distanceP0 = length(p0 - p);
    float distanceP1 = length(p1 - p);
    
    float l2 =pow(length(p0 - p1), 2.);
    float t = max(0., min(1., dot(p - p0, p1 - p0) / l2));
    vec2 projection = p0 + t * (p1 - p0); 
    float distanceToProjection = length(projection - p);
    
    return min(min(distanceP0, distanceP1), distanceToProjection);
}

float saw(float x, float period) {
	return x - ceil(x / period - 0.5) * period;
}

float function(float x) {
//	x += 0.1;
//	x *= 1.9;
//	 if (x > 1.25) x -= 1.25;
//	return 0.5 - heartbeat(x) / 2.;
	return 0.5 + (texture(noise, vec2(x, 0.5)).r - 0.5) * chiRate;
}

float distanceToFunction(vec2 p, float xDelta) {
    float result = 100.;
    for (float i = -3.; i < 3.; i += 1.)
    {
        vec2 q = p;
        q.x += xDelta * i;
        
        vec2 p0 = vec2(q.x, function(q.x));
    	vec2 p1 = vec2(q.x + xDelta, function(q.x + xDelta));
        result = min(result, distanceToLineSegment(p0, p1, p));
    }

    return result;
}

float getFunctionLine(vec2 uv) {
	float distanceToPlot = distanceToFunction(uv, 1. / iResolution.x);
    float intensity = smoothstep(0., 1., 1. - distanceToPlot * 1. * iResolution.y);
    intensity = pow(intensity,1./2.2);
	return intensity;
}

float cot(float x) {
	return cos(x) / sin(x);
}

float sawtooth(float x, float amplitude, float period) {
	float a1 = (2. * amplitude) / 3.1416;
	float a2 = (x * 3.1416) / period;
	return -a1 * atan(cot(a2));
}

void fragment() {
    vec2 uv = UV;

    float intensity = getFunctionLine(uv);
	intensity = min(intensity * 1.5, 1.);
    vec3 col = vec3(blend_color.rgb) * intensity;
	
	float grad = texture(gradient, vec2(UV.x - sawtooth(TIME + offset, 1., 2.), UV.y)).r;
	
    COLOR = vec4(col,1.0);
	COLOR.a = intensity * grad;
}"

[sub_resource type="OpenSimplexNoise" id=6]
seed = 3
octaves = 5
period = 138.4
persistence = 0.791

[sub_resource type="NoiseTexture" id=7]
seamless = true
bump_strength = 24.6
noise = SubResource( 6 )

[sub_resource type="ShaderMaterial" id=8]
shader = SubResource( 5 )
shader_param/chiRate = 2.5
shader_param/iResolution = Vector2( 10, 30 )
shader_param/blend_color = Color( 0.141176, 0.811765, 0.945098, 1 )
shader_param/offset = 0.339
shader_param/gradient = SubResource( 3 )
shader_param/noise = SubResource( 7 )

[sub_resource type="ViewportTexture" id=9]
viewport_path = NodePath("Preview/Viewport")

[sub_resource type="ProceduralSky" id=10]

[sub_resource type="Environment" id=11]
background_sky = SubResource( 10 )
ambient_light_color = Color( 1, 1, 1, 1 )

[sub_resource type="CapsuleMesh" id=12]

[sub_resource type="StyleBoxEmpty" id=13]
content_margin_left = 2.0
content_margin_right = 2.0
content_margin_top = 0.0
content_margin_bottom = 2.0

[sub_resource type="DynamicFont" id=16]
size = 8
extra_spacing_top = -1
font_data = ExtResource( 23 )

[sub_resource type="StyleBoxFlat" id=14]
bg_color = Color( 0.12549, 0.12549, 0.12549, 1 )
border_width_left = 1
border_width_top = 1
border_width_right = 1
border_width_bottom = 1
border_color = Color( 1, 0.305882, 0, 1 )

[sub_resource type="StyleBoxFlat" id=15]
bg_color = Color( 0.0862745, 0.0862745, 0.0862745, 1 )
border_width_left = 1
border_width_top = 1
border_width_right = 1
border_width_bottom = 1
border_color = Color( 1, 0.305882, 0, 1 )
anti_aliasing = false

[node name="GUI" type="Control"]
light_mask = 524288
anchor_right = 1.0
anchor_bottom = 1.0
margin_right = -960.0
margin_bottom = -540.0
script = ExtResource( 15 )

[node name="InvBacklay" type="Control" parent="."]
light_mask = 524288
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 2
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="ColorRect" type="ColorRect" parent="InvBacklay"]
light_mask = 524288
margin_right = 320.0
margin_bottom = 180.0
color = Color( 0, 0, 0, 1 )
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="Status" type="NinePatchRect" parent="."]
light_mask = 524288
margin_left = 183.0
margin_top = 12.0
margin_right = 289.0
margin_bottom = 81.0
texture = ExtResource( 4 )
patch_margin_left = 1
patch_margin_top = 4
patch_margin_right = 1
patch_margin_bottom = 1
axis_stretch_horizontal = 1
axis_stretch_vertical = 1
script = ExtResource( 13 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="HealthBar" type="NinePatchRect" parent="Status"]
light_mask = 524288
margin_left = 26.0
margin_top = 8.0
margin_right = 103.0
margin_bottom = 24.0
texture = ExtResource( 7 )
patch_margin_left = 1
patch_margin_top = 1
patch_margin_right = 1
patch_margin_bottom = 1
axis_stretch_horizontal = 1
axis_stretch_vertical = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="HealthGraph" type="ColorRect" parent="Status/HealthBar"]
light_mask = 524288
material = ExtResource( 1 )
margin_left = 1.0
margin_top = 1.0
margin_right = 76.0
margin_bottom = 15.0
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="SanityBar" type="NinePatchRect" parent="Status"]
light_mask = 524288
margin_left = 26.0
margin_top = 28.0
margin_right = 103.0
margin_bottom = 44.0
texture = ExtResource( 7 )
patch_margin_left = 1
patch_margin_top = 1
patch_margin_right = 1
patch_margin_bottom = 1
axis_stretch_horizontal = 1
axis_stretch_vertical = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="SanityGraph" type="ColorRect" parent="Status/SanityBar"]
light_mask = 524288
material = SubResource( 4 )
margin_left = 1.0
margin_top = 1.0
margin_right = 76.0
margin_bottom = 15.0
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="ChiBar" type="NinePatchRect" parent="Status"]
light_mask = 524288
margin_left = 26.0
margin_top = 48.0
margin_right = 103.0
margin_bottom = 64.0
texture = ExtResource( 7 )
patch_margin_left = 1
patch_margin_top = 1
patch_margin_right = 1
patch_margin_bottom = 1
axis_stretch_horizontal = 1
axis_stretch_vertical = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ChiGraph" type="ColorRect" parent="Status/ChiBar"]
light_mask = 524288
material = SubResource( 8 )
margin_left = 1.0
margin_top = 2.0
margin_right = 76.0
margin_bottom = 15.0
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="PlayerSprite" type="Sprite" parent="Status"]
light_mask = 524288
position = Vector2( 1, 12 )
texture = ExtResource( 9 )
centered = false
region_enabled = true
region_rect = Rect2( 12, 0, 24, 48 )

[node name="Preview" type="TextureRect" parent="."]
light_mask = 524288
margin_left = 180.0
margin_top = 88.0
margin_right = 292.0
margin_bottom = 160.0
mouse_filter = 2
texture = SubResource( 9 )
script = ExtResource( 21 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="PreviewBack" type="NinePatchRect" parent="Preview"]
show_behind_parent = true
light_mask = 524288
margin_left = 3.0
margin_top = -4.0
margin_right = 109.0
margin_bottom = 73.0
texture = ExtResource( 5 )
patch_margin_left = 1
patch_margin_top = 4
patch_margin_right = 1
patch_margin_bottom = 1
axis_stretch_horizontal = 1
axis_stretch_vertical = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="NoItemScreen" type="TextureRect" parent="Preview"]
light_mask = 524288
material = ExtResource( 17 )
margin_left = 4.0
margin_right = 108.0
margin_bottom = 72.0
texture = ExtResource( 16 )

[node name="Viewport" type="Viewport" parent="Preview"]
size = Vector2( 112, 72 )
transparent_bg = true
render_direct_to_screen = true
render_target_v_flip = true

[node name="Camera" type="Camera" parent="Preview/Viewport"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.537783, 1.48049 )
environment = SubResource( 11 )
current = true

[node name="Spatial" type="Spatial" parent="Preview/Viewport"]
transform = Transform( -0.924126, 0, 0.407581, 0, 1, 0, -0.407581, 0, -0.924126, 0, 0, 0 )
script = ExtResource( 11 )

[node name="ItemModel" type="CSGMesh" parent="Preview/Viewport/Spatial"]
transform = Transform( 0.152264, -0.0636028, 1.03613e-08, 0, -2.68841e-08, -0.165, 0.0636028, 0.152264, -2.48049e-08, 0, 0.6, 0 )
mesh = SubResource( 12 )
material = ExtResource( 10 )

[node name="Description" type="ColorRect" parent="Preview"]
light_mask = 524288
margin_left = 4.0
margin_right = 108.0
margin_bottom = 72.0
color = Color( 0, 0, 0, 0.662745 )

[node name="Text" type="Label" parent="Preview/Description"]
light_mask = 524288
anchor_right = 1.0
anchor_bottom = 1.0
custom_fonts/font = ExtResource( 8 )
custom_styles/normal = SubResource( 13 )
text = "A handgun is a short-barrelled firearm that can be held and used with one hand.
Ammo: 7/12"
align = 1
valign = 1
autowrap = true
clip_text = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="InventoryManager" type="Control" parent="."]
light_mask = 524288
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 2
script = ExtResource( 20 )
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": false
}
inventoriesPath = [ NodePath("Main"), NodePath("Toolbox"), NodePath("Weapon1"), NodePath("Weapon2"), NodePath("Usable"), NodePath("Tools"), NodePath("Chip1"), NodePath("Chip2"), NodePath("Chip3") ]
weaponsPath = [ NodePath("Weapon1"), NodePath("Weapon2") ]
toolPath = NodePath("Tools")
usablePath = NodePath("Usable")
inventoryPath = NodePath("Main")

[node name="Main" type="NinePatchRect" parent="InventoryManager"]
light_mask = 524288
margin_left = 23.0
margin_top = 84.0
margin_right = 177.0
margin_bottom = 161.0
texture = ExtResource( 2 )
patch_margin_left = 1
patch_margin_top = 4
patch_margin_right = 1
patch_margin_bottom = 1
axis_stretch_horizontal = 1
axis_stretch_vertical = 1
script = ExtResource( 18 )
__meta__ = {
"_edit_use_anchors_": false
}
GridSize = Vector2( 19, 9 )
CellSize = Vector2( 8, 8 )
CellOffset = Vector2( 1, 4 )
name = "inventory"
blacklistType = 5

[node name="Toolbox" type="NinePatchRect" parent="InventoryManager"]
light_mask = 524288
margin_left = 23.0
margin_top = 12.0
margin_right = 97.0
margin_bottom = 49.0
texture = ExtResource( 2 )
patch_margin_left = 1
patch_margin_top = 4
patch_margin_right = 1
patch_margin_bottom = 1
axis_stretch_horizontal = 1
axis_stretch_vertical = 1
script = ExtResource( 18 )
__meta__ = {
"_edit_use_anchors_": false
}
GridSize = Vector2( 9, 3 )
CellSize = Vector2( 8, 8 )
CellOffset = Vector2( 1, 12 )
name = "toolbox"
blacklistType = 5

[node name="Button" type="Button" parent="InventoryManager/Toolbox"]
light_mask = 524288
margin_top = 3.0
margin_right = 74.0
margin_bottom = 12.0
focus_mode = 0
custom_fonts/font = SubResource( 16 )
custom_styles/hover = SubResource( 14 )
custom_styles/pressed = SubResource( 15 )
custom_styles/normal = ExtResource( 12 )
shortcut_in_tooltip = false
enabled_focus_mode = 0
text = "Combine"
clip_text = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Weapon1" type="NinePatchRect" parent="InventoryManager"]
light_mask = 524288
margin_left = 103.0
margin_top = 12.0
margin_right = 137.0
margin_bottom = 81.0
texture = ExtResource( 4 )
patch_margin_left = 1
patch_margin_top = 4
patch_margin_right = 1
patch_margin_bottom = 1
axis_stretch_horizontal = 1
axis_stretch_vertical = 1
script = ExtResource( 18 )
__meta__ = {
"_edit_use_anchors_": false
}
GridSize = Vector2( 4, 8 )
CellSize = Vector2( 8, 8 )
CellOffset = Vector2( 1, 4 )
name = "weapon1"
allowedType = 2
blacklistType = 5
isItemSlot = true

[node name="Overlay" type="Sprite" parent="InventoryManager/Weapon1"]
position = Vector2( 17, 36 )
texture = ExtResource( 22 )

[node name="Weapon2" type="NinePatchRect" parent="InventoryManager"]
light_mask = 524288
margin_left = 143.0
margin_top = 12.0
margin_right = 177.0
margin_bottom = 81.0
texture = ExtResource( 4 )
patch_margin_left = 1
patch_margin_top = 4
patch_margin_right = 1
patch_margin_bottom = 1
axis_stretch_horizontal = 1
axis_stretch_vertical = 1
script = ExtResource( 18 )
__meta__ = {
"_edit_use_anchors_": false
}
GridSize = Vector2( 4, 8 )
CellSize = Vector2( 8, 8 )
CellOffset = Vector2( 1, 4 )
name = "weapon2"
allowedType = 2
blacklistType = 5
isItemSlot = true

[node name="Overlay" type="Sprite" parent="InventoryManager/Weapon2"]
position = Vector2( 17, 36 )
texture = ExtResource( 22 )

[node name="Usable" type="NinePatchRect" parent="InventoryManager"]
light_mask = 524288
margin_left = 71.0
margin_top = 52.0
margin_right = 97.0
margin_bottom = 81.0
texture = ExtResource( 4 )
patch_margin_left = 1
patch_margin_top = 4
patch_margin_right = 1
patch_margin_bottom = 1
axis_stretch_horizontal = 1
axis_stretch_vertical = 1
script = ExtResource( 18 )
__meta__ = {
"_edit_use_anchors_": false
}
GridSize = Vector2( 3, 3 )
CellSize = Vector2( 8, 8 )
CellOffset = Vector2( 1, 4 )
name = "usable"
allowedType = 10
blacklistType = 5
isItemSlot = true

[node name="Overlay" type="Sprite" parent="InventoryManager/Usable"]
position = Vector2( 13, 16 )
texture = ExtResource( 6 )

[node name="Tools" type="NinePatchRect" parent="InventoryManager"]
light_mask = 524288
margin_left = 23.0
margin_top = 52.0
margin_right = 65.0
margin_bottom = 81.0
texture = ExtResource( 4 )
patch_margin_left = 1
patch_margin_top = 4
patch_margin_right = 1
patch_margin_bottom = 1
axis_stretch_horizontal = 1
axis_stretch_vertical = 1
script = ExtResource( 18 )
__meta__ = {
"_edit_use_anchors_": false
}
GridSize = Vector2( 5, 3 )
CellSize = Vector2( 8, 8 )
CellOffset = Vector2( 1, 4 )
name = "tools"
allowedType = 9
blacklistType = 5
isItemSlot = true

[node name="Overlay" type="Sprite" parent="InventoryManager/Tools"]
position = Vector2( 21, 16 )
texture = ExtResource( 19 )

[node name="Chip1" type="TextureRect" parent="InventoryManager"]
visible = false
light_mask = 524288
margin_left = 186.0
margin_top = 66.0
margin_right = 210.0
margin_bottom = 78.0
texture = ExtResource( 3 )
expand = true
stretch_mode = 1
script = ExtResource( 18 )
__meta__ = {
"_edit_use_anchors_": false
}
CellSize = Vector2( 24, 12 )
name = "chip1"
allowedType = 5
isItemSlot = true

[node name="Chip2" type="TextureRect" parent="InventoryManager"]
visible = false
light_mask = 524288
margin_left = 224.0
margin_top = 66.0
margin_right = 248.0
margin_bottom = 78.0
texture = ExtResource( 3 )
expand = true
stretch_mode = 1
script = ExtResource( 18 )
__meta__ = {
"_edit_use_anchors_": false
}
CellSize = Vector2( 24, 12 )
name = "chip2"
allowedType = 5
isItemSlot = true

[node name="Chip3" type="TextureRect" parent="InventoryManager"]
visible = false
light_mask = 524288
margin_left = 261.0
margin_top = 66.0
margin_right = 285.0
margin_bottom = 78.0
texture = ExtResource( 3 )
expand = true
stretch_mode = 1
script = ExtResource( 18 )
__meta__ = {
"_edit_use_anchors_": false
}
CellSize = Vector2( 24, 12 )
name = "chip3"
allowedType = 5
isItemSlot = true

[node name="Items" type="Control" parent="InventoryManager"]
light_mask = 524288
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 2
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="InventoryHand" type="Control" parent="InventoryManager"]
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 2
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="ControlsHint" type="RichTextLabel" parent="."]
light_mask = 524288
margin_left = 8.0
margin_top = 163.0
margin_right = 304.0
margin_bottom = 174.0
custom_fonts/normal_font = ExtResource( 8 )
bbcode_enabled = true
bbcode_text = "[center] [img]res://GUI/Inventory/spr_inventory_hint3.png[/img] - use, [img]res://GUI/Inventory/spr_inventory_hint2.png[/img] - drop, [img]res://GUI/Inventory/spr_inventory_hint1.png[/img] - description, [img]res://GUI/Inventory/spr_inventory_hint4.png[/img] - scroll [/center]"
text = "  - use,  - drop,  - description,  - scroll "
scroll_active = false
__meta__ = {
"_edit_use_anchors_": false
}
